configuration:
  server_ip:
   name: server_ip, binds the webserver server to an ip address/range
   description: default 0.0.0.0, which sallows the server to listen to all network interfaces accessible inside the docker container
  hass_url:
    name: URL, the Home Assistant instance
    description: hass_url (Default "empty").If using the supervisor (this Home Assistant) you can leave this to the default "empty" value. Otherwise enter the URL (Ex. http://localhost:8123/) of your external Home Assistant instance.
  long_lived_token:
    name: Long-Lived Access Token of the Home Assistant instance
    description: long_lived_token (Default "empty").If using the supervisor (this Home Assistant) you can leave this to the default "empty" value.  Otherwise enter the Long-Lived Access Token for your Home Assistant instance, this can be created from the Lovelace profile page.
  data_path:
    name: Set folder path where EMHASS data will be stored
    description: data_path (Default default), selecting /data/ will store data in an enclosed folder, only assessable by the addon itself. Select /share/emhass to store data in the mounted share folder, accessible outside of the addon.
  time_zone:
    name: The time zone of your system.
    description: time_zone, (Default Europe/Paris) this is automatically set if your are using the supervisor.
  Latitude:
    name: Your systems latitude.
    description: Latitude, (Default 45.0) this is automatically set if your are using the supervisor. Used for solar.forecast & scrapper for location, & for estimating cloud cover if Solcast is selected.
  Longitude:
    name: Your systems longitude.
    description: Longitude, (Default 6.0) this is automatically set if your are using the supervisor. Used for solar.forecast & scrapper for location, & for estimating cloud cover if Solcast is selected.
  Altitude:
    name: Your systems altitude
    description: Altitude, (Default 100.0) this is automatically set if your are using the supervisor.
  solcast_api_key:
    name: optional_solcast_api_key, solcast api key
    description: optional_solcast_api_key, solcast api key (weather_forecast_method=solcast)
  solcast_rooftop_id:
    name: optional_solcast_rooftop_id, solcast rooftop id
    description: optional_solcast_rooftop_id, solcast rooftop id (weather_forecast_method=solcast)
  solar_forecast_kwp:
    name: optional_solar_forecast_kwp,int value for PV peak installed power in KW. (weather_forecast_method=solar.forecast)
    description: optional_solar_forecast_kwp (Default 0). The PV peak installed power in kW used for the 'solar.forecast' API call  battery_nominal_energy_capacity:
    name: Battery nominal energy capacity (Wh)
    description: The total energy capacity of your home battery in Wh (e.g., 10000 for 10kWh battery)
  battery_minimum_state_of_charge:
    name: Battery minimum SOC (0-1)
    description: Minimum allowed battery state of charge (e.g., 0.2 for 20% minimum)
  battery_maximum_state_of_charge:
    name: Battery maximum SOC (0-1) 
    description: Maximum allowed battery state of charge (e.g., 0.9 for 90% maximum)
  battery_target_state_of_charge:
    name: Battery target SOC (0-1)
    description: Target battery state of charge for optimization (e.g., 0.6 for 60% target)
  number_of_ev_loads:
    name: Number of EV loads
    description: How many electric vehicles to optimize (0 = no EVs, 1 = one EV, 2 = two EVs, etc.)
  ev_battery_capacity:
    name: EV battery capacities (Wh)
    description: Battery capacity for each EV in Wh as JSON array (e.g., "[60000]" for one 60kWh EV, "[60000,75000]" for two EVs)
  ev_charging_efficiency:
    name: EV charging efficiencies (0-1)
    description: Charging efficiency for each EV as JSON array (e.g., "[0.9]" for 90% efficiency, "[0.9,0.85]" for two EVs)
  ev_nominal_charging_power:
    name: EV nominal charging powers (W)
    description: Maximum charging power for each EV in W as JSON array (e.g., "[7400]" for 7.4kW charger, "[7400,11000]" for two EVs)
  ev_minimum_charging_power:
    name: EV minimum charging powers (W)
    description: Minimum charging power for each EV in W as JSON array (e.g., "[1380]" for 1.38kW minimum, "[1380,2000]" for two EVs)
  ev_consumption_efficiency:
    name: EV consumption efficiency (kWh/100km)
    description: Energy consumption per 100km for each EV as JSON array (e.g., "[15.0]" for 15kWh/100km, "[15.0,18.0]" for two EVs)
  data_path:
    name: EV Extension Data Storage Path
    description: "IMPORTANT: Use /share/emhass-ev (recommended) to avoid conflicts with original EMHASS add-on. Never use /share/emhass as it will conflict with the original EMHASS installation."
